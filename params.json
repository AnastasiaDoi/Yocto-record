{"name":"Yoctopuce-meteo-temperature","tagline":"Data recording for Yoctopuce Meteo (Weather) and Thermocouples modules in Python ","body":"# Yoctopuce-Meteo-Temperature\r\n===========================\r\n\r\n## Data recording for Yoctopuce Meteo (Weather) and Thermocouples modules in Python \r\n\r\nThis small program allows displaying in a terminal (text mode, updated every second):\r\n* Pressure\r\n* Humidity\r\n* Temperature(s)\r\n\r\nFrom zero to one **[Yocto-Meteo](http://www.yoctopuce.com/EN/products/capteurs-usb/yocto-meteo)**\r\nmodule and/or zero to three thermocouples\r\n**[Yocto-Thermocouples](http://www.yoctopuce.com/EN/products/usb-sensors/yocto-thermocouple)** module(s).\r\n\r\nAt the same type a text file is created, updated every second (by default): **Date-Time-Module1-Module2-....txt**. \r\nSeparators are coma (or any other caracter), easily importable in Libreoffice Calc, Excel or any plotting software.\r\n\r\nThis is a draft version, tested with three modules (1 Meteo & 2 thermocouples),\r\nworks in direct usb mode, or with VirtualHub running.\r\n\r\n***\r\n\r\n## Required components\r\n\r\n* Yocto-Meteo and/or Yocto-Thermocouples modules from Yoctopuce (http://www.yoctopuce.com/)\r\n* Yoctopuce Python libraries: http://www.yoctopuce.com/EN/libraries.php (YoctoLib.python.XXXX.zip)\r\n* Python 3.x: http://www.python.org/download/\r\n* Meteo+TC.py script (from https://github.com/SebastienCaillat/Yoctopuce-Meteo-Temperature)\r\n\r\n## Installation\r\n\r\n* Install Python (with option to declare path)\r\n* Copy content of the directory \\YoctoLib.python.XXXX\\Source\\ (yocto_api.py and other yocto_XXX.py files)\r\nto ~\\Python3.3\\Lib\\ directory were Python was installed\r\n\r\n## Starting the program \r\n\r\n* Put `Meteo+TC.py` on any directory, where the datafiles will be stored\r\n* Open command prompt in this directory (Windows user: shift+right click in Explorer)\r\n* Type `Meteo+TC.py`  \r\n=> Names of the recognized module(s) should appear  \r\n=> Date, time, temperatures, pressure & humidity should be displayed every second\r\n* Same data will be saved in text file in column \r\n* Name of the text file will be Date-time-modules-types.txt  \r\n=> for example: `2013-08-18-08-12-21-Thermo-Meteo.txt`\r\n\r\n## Data file example\r\n\r\n```\r\nDay Time Temperature(Â°C) Pressure(mb) RH(%) Module: METEOMK1-0D163  \r\n2013/08/19 14:18:41,24.0,1016,43  \r\n2013/08/19 14:18:42,24.0,1016,43  \r\n2013/08/19 14:18:43,24.0,1016,43  \r\n```\r\n## Settings\r\nSome settings are avalaible using argument:\r\n* `Meteo+TC.py name` => will append a name to the data file  \r\n=> for example: `2013-08-18-08-12-21-Thermo-Meteo-name.txt`\r\n* `Meteo+TC.py nofile` to avoid saving to datafile\r\n* `Meteo+TC.py help` or `?` for a very short help  \r\n\r\nOther settings are available in the program:\r\n* Sample time: default is 1 second, automaticaly adjusted by the program to include script run time \r\n* Separator: default is coma (,)\r\n\r\n## Stoping the program\r\n\r\n* Type [`Ctrl+c`] to stop the programm\r\n* Import data file in any graphic software (delimiters are coma)\r\n* Have fun!\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}